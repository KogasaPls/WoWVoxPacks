name: Check for updates
on:
  schedule:
    - cron: '0 */6 * * *' # every 6 hours
  workflow_dispatch:

jobs:
  check-bigwigs-voice-version:
    runs-on: ubuntu-latest
    outputs:
      bigwigs_version: ${{ steps.compare-versions.outputs.bigwigs_version }}
    steps:
      - name: Get latest BigWigsVoice release
        id: get-bigwigsvoice-release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: BigWigsMods
          repo: BigWigs_Voice
          excludes: prerelease, draft
      - name: Write version to file
        run: echo "${{ steps.get-bigwigsvoice-release.outputs.release }}" > version.txt
      - name: Get previous version
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/KogasaPls/WoWVoxPacks/releases/latest \
            | jq -r '.assets[] | select(.name == "bigwigs-voice-version.txt") | .browser_download_url'  \
            | xargs curl -L -o previous-version.txt
      - name: Compare versions
        id: compare-versions
        run: |
          if [ ! -f previous-version.txt ]; then
            echo "No previous version detected"
            echo "bigwigs_version=$(cat version.txt)" >> $GITHUB_OUTPUT
          elif [ "$(cat version.txt)" != "$(cat previous-version.txt)" ]; then
            echo "New version detected (old: $(cat previous-version.txt), new: $(cat version.txt))"
            echo "bigwigs_version=$(cat version.txt)" >> $GITHUB_OUTPUT
          else
            echo "No new version detected"
          fi

  create-release:
    needs: check-bigwigs-voice-version
    if: ${{ needs.check-bigwigs-voice-version.outputs.bigwigs_version != '' }}
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Read new version
        id: read-version
        run: |
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "$VERSION" > bigwigs-voice-version.txt
        env:
          VERSION: ${{ needs.check-bigwigs-voice-version.outputs.bigwigs_version }}
      - name: Package artifacts
        run: RELEASE_TAG=${{ needs.check-bigwigs-voice-version.outputs.bigwigs_version }} ./scripts/package.sh
      - name: Create GitHub Release
        id: create-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.version }}
          name: Release ${{ env.version }}
          body: |
            New BigWigs_Voice release detected: **${{ env.version }}**.
            Automatically created by the update workflow.
          draft: false
          prerelease: false
          files: |
            ./dist/*.zip
            ./bigwigs-voice-version.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}