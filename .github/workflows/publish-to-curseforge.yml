name: Publish to CurseForge
on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      voices:
        description: 'Comma separated list of voices to publish e.g. "Wavenet_E,Neural2_C,Studio_Q"'
        default: 'Wavenet_E,Neural2_C,Studio_Q'
        required: true
      addons:
        description: 'Comma separated list of addons to publish e.g. "BigWigs_Voice,SharedMedia_Causese,BigWigs_Countdown"'
        default: 'BigWigs_Voice,SharedMedia_Causese,BigWigs_Countdown'
        required: true
      voice-to-addon-to-project-id-json:
        description: 'Doubly nested JSON mapping. First level key is voice, second level key is addon, value is project_id'
        required: true
        default: |
          {
            "Wavenet_E": {
              "BigWigs_Voice": 1215288,
              "SharedMedia_Causese": 1215285,
              "BigWigs_Countdown": 1217577
            },
            "Neural2_C": {
              "SharedMedia_Causese": 1214942,
              "BigWigs_Voice": 1217580,
              "BigWigs_Countdown": 1217583
            },
            "Studio_Q": {
              "SharedMedia_Causese": 1218351,
              "BigWigs_Voice": 1218355,
              "BigWigs_Countdown": 1218357
            }
          }
jobs:
  publish-addon:
    strategy:
      max-parallel: 3
      fail-fast: true
      matrix:
        voice: ${{ fromJSON(format('[{0}]', inputs.voices)) }}
        addon: ${{ fromJSON(format('[{0}]', inputs.addons)) }}
    runs-on: ubuntu-latest
    name: Publish ${{ matrix.addon }} (${{ matrix.voice }})
    steps:
      - name: Set release tag
        id: set-release-tag-push
        if: github.event_name == 'push' || github.event_name == 'release'
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set release tag
        id: set-release-tag
        if: github.event_name != 'push' && github.event_name != 'release'
        run: |
          RELEASE_TAG=$(curl -s https://api.github.com/repos/KogasaPls/WoWVoxPacks/releases/latest | jq -r '.tag_name')
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV
      - name: Download release assets
        uses: robinraju/release-downloader@v1
        with:
          tag: ${{ env.RELEASE_TAG }}
          fileName: WoWVoxPacks_${{ matrix.voice }}_${{ matrix.addon }}_${{ env.RELEASE_TAG }}.zip
          extract: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload to CurseForge
        uses: itsmeow/curseforge-upload@v3
        with:
          file_path: WoWVoxPacks_${{ matrix.voice }}_${{ matrix.addon }}_${{ env.RELEASE_TAG }}.zip
          game_endpoint: 'wow'
          project_id: ${{ fromJSON('${{ inputs.voice-to-addon-to-project-id-json }}')[matrix.voice][matrix.addon] }}
          token: ${{ secrets.CURSEFORGE_API_TOKEN }}
          display_name: ${{ matrix.addon }} (${{ matrix.voice }}) ${{ env.RELEASE_TAG }}
          game_versions: '11.1.0'
