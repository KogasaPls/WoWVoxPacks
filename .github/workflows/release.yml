name: Release
run-name: Release ${{ github.event.inputs.version }}
on:
  release:
    types: [published]

jobs:
  Build-Release:
    permissions: write-all
    env:
      CI: true
      DOTNET_ENVIRONMENT: Release
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      OUTPUT_DIR: dist
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '9.0.x' ]
    steps:
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - uses: actions/checkout@v4
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Package artifacts
        run: RELEASE_TAG=${{ steps.get_release.outputs.tag_name}} ./scripts/package.sh
      - name: Upload release Neural2_C
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/WoWVoxPacks_Neural2_C_${{ steps.get_release.outputs.tag_name }}.zip
          asset_name: WoWVoxPacks_Neural2_C_${{ steps.get_release.outputs.tag_name }}.zip
          asset_content_type: application/zip
      - name: Upload release Wavenet_E
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./dist/WoWVoxPacks_Wavenet_E_${{ steps.get_release.outputs.tag_name }}.zip
          asset_name: WoWVoxPacks_Wavenet_E_${{ steps.get_release.outputs.tag_name }}.zip
          asset_content_type: application/zip